digraph G {
	fontname ="Bitstream Vera Sans"
	fontsize = 8

	node [
			fontname ="Bitstream Vera Sans"
			fontsize = 8
			shape ="record"
	]

	edge [
			fontname ="Bitstream Vera Sans"
			fontsize = 8
	]

AnimationEditorView_1 [label ="{AnimationEditorView|Event\<Grafkit::Animation::TrackRef\&, const size_t\&, Grafkit::Animation::ChannelRef\&\> onChannelSelected;\l}" ]
AnimationEditorView_2 [label ="{AnimationEditorView|Event\<\> onChannelDeselected;\l}" ]
AnimationEditorView_3 [label ="{AnimationEditorView|Event\<\> onTogglePlayback;\l}" ]
AnimationEditorView_4 [label ="{AnimationEditorView|Event\<\> onStopPlayback;\l}" ]

F:\prog\grafkit2\src\editor\modules\curveEditor\AnimationModule.cpp(45):    m_myView->onTogglePlayback += Delegate(timer, &Timer::TogglePlay);
F:\prog\grafkit2\src\editor\modules\curveEditor\AnimationModule.cpp(46):    m_myView->onStopPlayback += Delegate(timer, &Timer::Stop);
F:\prog\grafkit2\src\editor\modules\curveEditor\AnimationModule.cpp(50):    m_myView->onChannelSelected += Delegate(m_curveScene.Get(), &CurveEditor::ChannelSelectedEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\AnimationModule.cpp(51):    m_myView->onChannelDeselected += Delegate(m_curveScene.Get(), &CurveEditor::ChannelDeselectedEvent);

CommandStack_1 [label ="{CommandStack|Event\<CommandRef\> onNewCommand;\l}" ]
CommandStack_2 [label ="{CommandStack|Event\<CommandStack * const \&\> onCommandStackChanged;\l}" ]

CurveEditorView_1 [label ="{CurveEditorView|Event\<size_t\> onPointSelected;\l}" ]
CurveEditorView_2 [label ="{CurveEditorView|Event\<\> onPointDeSelected;\l}" ]
CurveEditorView_3 [label ="{CurveEditorView|Event\<const float\&, const float\&\> onCommitAddPointEvent;\l}" ]
CurveEditorView_4 [label ="{CurveEditorView|Event\<const size_t\&\> onCommitRemovePointEvent;\l}" ]

F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(120):    //m_manageAudiogram->onRequestWaveform += Delegate(music, &Audiogram::GetWaveform);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(125):    musicProxy->onMusicChanged += Delegate(m_manageAudiogram, &Roles::ManageCurveAudiogramRole::ClearAudiogram);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(126):    musicProxy->onMusicChanged += Delegate(ces, &Roles::TimelineSceneViewRole::MusicChangedEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(128):    ces->onDemoTimeChanged += Delegate(musicProxy, &MusicProxy::SetTime);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(130):    ces->onRequestAudiogram += Delegate(m_manageAudiogram, &Roles::ManageCurveAudiogramRole::GetAudiogram);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(131):    editor->onDemoTimeChanged += Delegate(ces, &Roles::TimelineSceneViewRole::DemoTimeChangedEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(133):    m_manageAudiogram->onRequestWaveform += Delegate(musicProxy, &Audiogram::GetWaveform);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(140):    ces->onPointDeSelected += Delegate(m_pointEditor, &CurvePointEditor::PointDeSelectedEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(141):    ces->onPointSelected += Delegate(m_pointEditor, &CurvePointEditor::PointSelectedEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(143):    ces->onCommitAddPointEvent += Delegate(m_pointEditor, &CurvePointEditor::CommitAddPointEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurveEditor.cpp(144):    ces->onCommitRemovePointEvent += Delegate(m_pointEditor, &CurvePointEditor::CommitRemovePointEvent);

F:\prog\grafkit2\src\editor\modules\curveEditor\CurvePointEditor.cpp(35):        point->onStartEdit += Delegate(this, &CurvePointEditor::StartEditEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurvePointEditor.cpp(36):        point->onCommitEdit += Delegate(this, &CurvePointEditor::CommitEditEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurvePointEditor.cpp(37):        point->onEditKey += Delegate(this, &CurvePointEditor::EditKeyEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurvePointEditor.cpp(85):    m_myView->onEditKey += Delegate(this, &CurvePointEditor::EditKeyEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurvePointEditor.cpp(86):    m_myView->onStartEdit += Delegate(this, &CurvePointEditor::StartEditEvent);
F:\prog\grafkit2\src\editor\modules\curveEditor\CurvePointEditor.cpp(87):    m_myView->onCommitEdit += Delegate(this, &CurvePointEditor::CommitEditEvent);
 
Editor_1 [label ="{Editor|Event\<Document* const \&\> onDocumentChanged;\l}" ]
Editor_2 [label ="{Editor|Event\<const float \&\> onDemoTimeChanged;\l}" ]

F:\prog\grafkit2\src\editor\EditorView.cpp(15):void Roles::ManageCommandStackRole::ConnectCommandStackEvents(CommandStack* const & stack) { stack->onCommandStackChanged += Delegate(this, &ManageCommandStackRole::CommandStackChangedEvent); }
F:\prog\grafkit2\src\editor\main_editor.cpp(37):    onLoaderFinished += Delegate(loader, &LoaderThread::deleteLater);
 
EditorApplication_1 [label ="{EditorApplication|Event\<\> onLoaderFinished;\l}" ]
EditorApplication_2 [label ="{EditorApplication|Event\<QWidget* const\&, QWidget* const\&\> onFocusChanged;\l}" ]

F:\prog\grafkit2\src\editor\EditorView.cpp(15):void Roles::ManageCommandStackRole::ConnectCommandStackEvents(CommandStack* const & stack) { stack->onCommandStackChanged += Delegate(this, &ManageCommandStackRole::CommandStackChangedEvent); }

F:\prog\grafkit2\src\editor\Application.cpp(66):    onFocusChanged += Delegate(m_preloadWindow, &Preloader::FocusChanged);
F:\prog\grafkit2\src\editor\Application.cpp(72):    onLoaderFinished += Delegate(sw, &SplashWidget::hide);
F:\prog\grafkit2\src\editor\Application.cpp(73):    onLoaderFinished += Delegate(sw, &SplashWidget::deleteLater);
F:\prog\grafkit2\src\editor\Application.cpp(74):    onLoaderFinished += Delegate(m_mainWindow, &MainWindow::showMaximized);
F:\prog\grafkit2\src\editor\Application.cpp(75):    onLoaderFinished += Delegate(this, &EditorApplication::NextTick);
F:\prog\grafkit2\src\editor\Application.cpp(138):    m_editor->onDocumentChanged += Delegate(dynamic_cast<OutlineModule*>(m_outlineViewModule.Get()), &OutlineModule::DocumentChangedEvent);
F:\prog\grafkit2\src\editor\Application.cpp(144):    dynamic_cast<OutlineModule*>(m_outlineViewModule.Get())->onItemSelected += Delegate(
F:\prog\grafkit2\src\editor\Application.cpp(196):    m_editor->GetCommandStack()->onCommandStackChanged += Delegate(m_mainWindow, &Roles::ManageCommandStackRole::CommandStackChangedEvent);
F:\prog\grafkit2\src\editor\Application.cpp(197):    m_mainWindow->onUndo += Delegate(m_editor->GetCommandStack(), &CommandStack::Undo);
F:\prog\grafkit2\src\editor\Application.cpp(198):    m_mainWindow->onRedo += Delegate(m_editor->GetCommandStack(), &CommandStack::Redo);

F:\prog\grafkit2\src\editor\mainWindow.cpp(109)://	editor->onDocumentChanged += Delegate(this, &MainWindow::DocumentChanged);
F:\prog\grafkit2\src\editor\mainWindow.cpp(112)://	app->GetLoggerProxy()->onUpdateLog += Delegate(m_logWidget, &LogWidget::UpdateLog);
 
EmitsCommandRole_1 [label ="{EmitsCommandRole|Event\<CommandRef\> onNewCommand;\l}" ]
 
F:\prog\grafkit2\src\editor\utils\Command.cpp(7):	emitter->onNewCommand += Delegate(this, &CommandStack::AddCommand);
 
LoggerProxy_1 [label ="{LoggerProxy|Event\<std::string\> onUpdateLog;\l}" ]

F:\prog\grafkit2\src\editor\modules\logView\LogModule.cpp(24):	m_loggerProxy->onUpdateLog += Delegate(m_myView.Get(), &LogView::UpdateLog);
 
MusicProxy_1 [label ="{MusicProxy|Event\<\> onMusicChanged;\l}" ]
 
OutlineModule_1 [label ="{OutlineModule|Event\<TreeItem * const\> onItemSelected;\l}" ]
 
QGrafkitContextWidget_1 [label ="{QGrafkitContextWidget|Event\<Grafkit::Renderer \&\> onResizeSurface;\l}" ]
 
ManageCommandStackRole_1 [label ="{Roles::ManageCommandStackRole|Event\<\> onUndo;\l}" ]
ManageCommandStackRole_2 [label ="{Roles::ManageCommandStackRole|Event\<\> onRedo;\l}" ]

ManageCurveAudiogramRole_1 [label ="{Roles::ManageCurveAudiogramRole|Event\<float*\&, size_t\&, size_t\&, size_t\&\> onRequestWaveform;\l}" ]
 
ManageFileOperationsRole_1 [label ="{Roles::ManageFileOperationsRole|Event\<\> onOpen;\l}" ]
ManageFileOperationsRole_2 [label ="{Roles::ManageFileOperationsRole|Event\<\> onSave;\l}" ]
ManageFileOperationsRole_3 [label ="{Roles::ManageFileOperationsRole|Event\<\> onNew;\l}" ]
 
TimelineSceneViewRole_1 [label ="{Roles::TimelineSceneViewRole|Event\<QImage**, float, float, int, int\> onRequestAudiogram;\l}" ]
TimelineSceneViewRole_2 [label ="{Roles::TimelineSceneViewRole|Event\<double\> onDemoTimeChanged;\l}" ]
 
TreeModel_1 [label ="{TreeModel|Event\<\> onDataChanged;\l}" ]
TreeModel_2 [label ="{TreeModel|Event\<TreeModel*\> onSelected;\l}" ]
}