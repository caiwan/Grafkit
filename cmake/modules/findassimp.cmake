if(CMAKE_SIZEOF_VOID_P EQUAL 8)
	set(ASSIMP_ARCHITECTURE "x64")
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
	set(ASSIMP_ARCHITECTURE "")
endif(CMAKE_SIZEOF_VOID_P EQUAL 8)
	
	MESSAGE("CMAKE_SIZEOF_VOID_P=${CMAKE_SIZEOF_VOID_P}")
	
if(WIN32)
	set(ASSIMP_ROOT_DIR CACHE PATH "ASSIMP root directory")

	# Find path of each library
	find_path(ASSIMP_INCLUDE_DIR 
		NAMES anim.h
		HINTS
			ENV ASSIMP_ROOT
			${ASSIMP_ROOT}
			ENV CMAKE_PREFIX_PATH
			${CMAKE_PREFIX_PATH}
		PATH_SUFFIXES 
			include/assimp
	)

	get_filename_component(ASSIMP_INCLUDE_DIR ${ASSIMP_INCLUDE_DIR}/../ ABSOLUTE)
	
	MESSAGE("ASSIMP_INCLUDE_DIR=${ASSIMP_INCLUDE_DIR}")

	if(MSVC12)
		set(ASSIMP_MSVC_VERSION "vc120")
	elseif(MSVC14)	
		set(ASSIMP_MSVC_VERSION "vc140")
	endif(MSVC12)
	
	# WHY THIS CRAP DOES NOT WORK, BUT THE CRAP ABOVE DOES 
    get_filename_component(ASSIMP_ROOT_DIR ${ASSIMP_INCLUDE_DIR}/../ ABSOLUTE)
	
	MESSAGE("ASSIMP_ROOT_DIR=${ASSIMP_ROOT_DIR} ASSIMP_MSVC_VERSION=${ASSIMP_MSVC_VERSION} ASSIMP_ARCHITECTURE=${ASSIMP_ARCHITECTURE}")
	
	if(MSVC12 OR MSVC14)
		find_path(ASSIMP_LIBRARY_DIR
			NAMES
				assimp-${ASSIMP_MSVC_VERSION}-mt.lib
			#HINTS
			PATH_SUFFIXES
				lib/${ASSIMP_ARCHITECTURE}
		)
		MESSAGE("${ASSIMP_ROOT_DIR}/lib/${ASSIMP_ARCHITECTURE}")
		MESSAGE("ASSIMP_LIBRARY_DIR=${ASSIMP_LIBRARY_DIR}")
		MESSAGE("assimp-${ASSIMP_MSVC_VERSION}-mt.lib")
		
		find_library(ASSIMP_LIBRARY_RELEASE	
			NAMES assimp-${ASSIMP_MSVC_VERSION}-mt.lib
			PATHS ${ASSIMP_LIBRARY_DIR}
		)
			
			#Turn it off for a while 
#		find_library(ASSIMP_LIBRARY_DEBUG				
#			assimp-${ASSIMP_MSVC_VERSION}-mtd.lib			
#			PATHS ${ASSIMP_LIBRARY_DIR}
#			)
		
		set(ASSIMP_LIBRARY 
			optimized 	${ASSIMP_LIBRARY_RELEASE}
#			debug		${ASSIMP_LIBRARY_DEBUG}
			debug 	${ASSIMP_LIBRARY_RELEASE}
		)
		
		set(ASSIMP_LIBRARIES "ASSIMP_LIBRARY_RELEASE" "ASSIMP_LIBRARY_DEBUG")
	
		FUNCTION (_ASSIMP_COPY_STATIC _TARGET _file _dest)
			#if (WIN32)
				string(REPLACE "/" "\\" __file "${_file}")
				string(REPLACE "/" "\\" __dest "${_dest}")
			#endif(WIN32)
			add_custom_command( TARGET ${_TARGET} COMMAND copy ${__file} ${__dest} DEPENDS ${__file} )
		ENDFUNCTION (_ASSIMP_COPY_STATIC)
	
		FUNCTION(ASSIMP_COPY_BINARIES _TARGET)
			#_ASSIMP_COPY_STATIC(${_TARGET} "${ASSIMP_ROOT_DIR}/bin/${ASSIMP_ARCHITECTURE}/assimp-${ASSIMP_MSVC_VERSION}-mtd.dll" "${CMAKE_CURRENT_BINARY_DIR}")
			#_ASSIMP_COPY_STATIC(${_TARGET} "${ASSIMP_ROOT_DIR}/bin/${ASSIMP_ARCHITECTURE}/assimp-${ASSIMP_MSVC_VERSION}-mtd.dll" "${CMAKE_CURRENT_BINARY_DIR}/Debug")
			_ASSIMP_COPY_STATIC(${_TARGET} "${ASSIMP_ROOT_DIR}/bin/${ASSIMP_ARCHITECTURE}/assimp-${ASSIMP_MSVC_VERSION}-mt.dll" "${CMAKE_CURRENT_BINARY_DIR}/")
			_ASSIMP_COPY_STATIC(${_TARGET} "${ASSIMP_ROOT_DIR}/bin/${ASSIMP_ARCHITECTURE}/assimp-${ASSIMP_MSVC_VERSION}-mt.dll" "${CMAKE_CURRENT_BINARY_DIR}/Release")
			_ASSIMP_COPY_STATIC(${_TARGET} "${ASSIMP_ROOT_DIR}/bin/${ASSIMP_ARCHITECTURE}/assimp-${ASSIMP_MSVC_VERSION}-mt.dll" "${CMAKE_CURRENT_BINARY_DIR}/Debug")
		ENDFUNCTION(ASSIMP_COPY_BINARIES)
		
		FUNCTION(ASSIMP_INSTALL_BINARIES _DESTINATION)
			install(FILES "${ASSIMP_ROOT_DIR}/bin/${ASSIMP_ARCHITECTURE}/assimp-${ASSIMP_MSVC_VERSION}-mt.dll" DESTINATION ${_DESTINATION})
		ENDFUNCTION(ASSIMP_INSTALL_BINARIES)
		
	endif()
	
else(WIN32)

	find_path(
	  assimp_INCLUDE_DIRS
	  NAMES postprocess.h scene.h version.h config.h cimport.h
	  PATHS /usr/local/include/
	)

	find_library(
	  assimp_LIBRARIES
	  NAMES assimp
	  PATHS /usr/local/lib/
	)

	if (assimp_INCLUDE_DIRS AND assimp_LIBRARIES)
	  SET(assimp_FOUND TRUE)
	ENDIF (assimp_INCLUDE_DIRS AND assimp_LIBRARIES)

	if (assimp_FOUND)
	  if (NOT assimp_FIND_QUIETLY)
		message(STATUS "Found asset importer library: ${assimp_LIBRARIES}")
	  endif (NOT assimp_FIND_QUIETLY)
	else (assimp_FOUND)
	  if (assimp_FIND_REQUIRED)
		message(FATAL_ERROR "Could not find asset importer library")
	  endif (assimp_FIND_REQUIRED)
	endif (assimp_FOUND)
	
endif(WIN32)
